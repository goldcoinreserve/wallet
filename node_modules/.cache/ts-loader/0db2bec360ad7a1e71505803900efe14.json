{"remainingRequest":"/home/hero/temp/gcr-wallet/node_modules/babel-loader/lib/index.js!/home/hero/temp/gcr-wallet/node_modules/ts-loader/index.js??ref--13-2!/home/hero/temp/gcr-wallet/src/services/ProfileService.ts","dependencies":[{"path":"/home/hero/temp/gcr-wallet/src/services/ProfileService.ts","mtime":1612953106739},{"path":"/home/hero/temp/gcr-wallet/.babelrc","mtime":1612953106663},{"path":"/home/hero/temp/gcr-wallet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hero/temp/gcr-wallet/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/hero/temp/gcr-wallet/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKTsgfSB9CgpmdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmICgidmFsdWUiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfQoKZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH0KCi8qCiAqIENvcHlyaWdodCAyMDIwIE5FTSAoaHR0cHM6Ly9uZW0uaW8pCiAqCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMAogKgogKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsCiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgogKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLgogKgogKi8KaW1wb3J0IHsgQ29udmVydCwgU0hBM0hhc2hlciB9IGZyb20gJ3N5bWJvbC1zZGsnOwppbXBvcnQgeyBQcm9maWxlTW9kZWxTdG9yYWdlIH0gZnJvbSAnQC9jb3JlL2RhdGFiYXNlL3N0b3JhZ2UvUHJvZmlsZU1vZGVsU3RvcmFnZSc7Ci8qKgogKiBTZXJ2aWNlIGluIGNoYXJnZSBvZiBsb2FkaW5nIHByb2ZpbGVzIGluZm9ybWF0aW9uIGZyb20gdGhlIHdhbGxldC4KICovCgpleHBvcnQgdmFyIFByb2ZpbGVTZXJ2aWNlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBQcm9maWxlU2VydmljZSgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBQcm9maWxlU2VydmljZSk7CgogICAgLyoqCiAgICAgKiBUaGUgc3RvcmFnZSB0byBrZWVwIHVzZXIgY29uZmlndXJhdGlvbiBhcm91bmQgbW9zYWljcy4gIEZvciBleGFtcGxlLCB0aGUgYmFsYW5jZSBoaWRkZW4KICAgICAqIGZlYXR1cmUuCiAgICAgKi8KICAgIHRoaXMucHJvZmlsZXNTdG9yYWdlID0gUHJvZmlsZU1vZGVsU3RvcmFnZS5JTlNUQU5DRTsKICB9CgogIF9jcmVhdGVDbGFzcyhQcm9maWxlU2VydmljZSwgW3sKICAgIGtleTogImdldFByb2ZpbGVzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRQcm9maWxlcygpIHsKICAgICAgcmV0dXJuIE9iamVjdC52YWx1ZXModGhpcy5nZXRQcm9maWxlc0J5UHJvZmlsZU5hbWUoKSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZ2V0UHJvZmlsZUJ5TmFtZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0UHJvZmlsZUJ5TmFtZShwcm9maWxlTmFtZSkgewogICAgICByZXR1cm4gdGhpcy5nZXRQcm9maWxlc0J5UHJvZmlsZU5hbWUoKVtwcm9maWxlTmFtZV07CiAgICB9CiAgfSwgewogICAga2V5OiAiZ2V0UHJvZmlsZXNCeVByb2ZpbGVOYW1lIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRQcm9maWxlc0J5UHJvZmlsZU5hbWUoKSB7CiAgICAgIHJldHVybiB0aGlzLnByb2ZpbGVzU3RvcmFnZS5nZXQoKSB8fCB7fTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzYXZlUHJvZmlsZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2F2ZVByb2ZpbGUocHJvZmlsZSkgewogICAgICB2YXIgcHJvZmlsZXMgPSB0aGlzLmdldFByb2ZpbGVzQnlQcm9maWxlTmFtZSgpOwogICAgICBwcm9maWxlc1twcm9maWxlLnByb2ZpbGVOYW1lXSA9IHByb2ZpbGU7CiAgICAgIHRoaXMucHJvZmlsZXNTdG9yYWdlLnNldChwcm9maWxlcyk7CiAgICAgIHJldHVybiBwcm9maWxlOwogICAgfQogIH0sIHsKICAgIGtleTogImRlbGV0ZVByb2ZpbGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGRlbGV0ZVByb2ZpbGUocHJvZmlsZU5hbWUpIHsKICAgICAgdmFyIHByb2ZpbGVzID0gdGhpcy5nZXRQcm9maWxlc0J5UHJvZmlsZU5hbWUoKTsKICAgICAgZGVsZXRlIHByb2ZpbGVzW3Byb2ZpbGVOYW1lXTsKICAgICAgdGhpcy5wcm9maWxlc1N0b3JhZ2Uuc2V0KHByb2ZpbGVzKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJ1cGRhdGVTZWVkIiwKICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGVTZWVkKHByb2ZpbGUsIHNlZWQpIHsKICAgICAgcmV0dXJuIHRoaXMuc2F2ZVByb2ZpbGUoT2JqZWN0LmFzc2lnbihwcm9maWxlLCB7CiAgICAgICAgc2VlZDogc2VlZAogICAgICB9KSk7CiAgICB9CiAgfSwgewogICAga2V5OiAidXBkYXRlUGFzc3dvcmQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZVBhc3N3b3JkKHByb2ZpbGUsIHBhc3N3b3JkLCBoaW50LCBzZWVkKSB7CiAgICAgIHJldHVybiB0aGlzLnNhdmVQcm9maWxlKE9iamVjdC5hc3NpZ24ocHJvZmlsZSwgewogICAgICAgIHBhc3N3b3JkOiBwYXNzd29yZCwKICAgICAgICBoaW50OiBoaW50LAogICAgICAgIHNlZWQ6IHNlZWQKICAgICAgfSkpOwogICAgfQogIH0sIHsKICAgIGtleTogInVwZGF0ZUFjY291bnRzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGVBY2NvdW50cyhwcm9maWxlLCBhY2NvdW50cykgewogICAgICByZXR1cm4gdGhpcy5zYXZlUHJvZmlsZShPYmplY3QuYXNzaWduKHByb2ZpbGUsIHsKICAgICAgICBhY2NvdW50czogYWNjb3VudHMKICAgICAgfSkpOwogICAgfQogIH0sIHsKICAgIGtleTogInVwZGF0ZVByb2ZpbGVUZXJtc0FuZENvbmRpdGlvbnNTdGF0dXMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZVByb2ZpbGVUZXJtc0FuZENvbmRpdGlvbnNTdGF0dXMocHJvZmlsZSwgdGVybXNBbmRDb25kaXRpb25zQXBwcm92ZWQpIHsKICAgICAgcmV0dXJuIHRoaXMuc2F2ZVByb2ZpbGUoT2JqZWN0LmFzc2lnbihwcm9maWxlLCB7CiAgICAgICAgdGVybXNBbmRDb25kaXRpb25zQXBwcm92ZWQ6IHRlcm1zQW5kQ29uZGl0aW9uc0FwcHJvdmVkCiAgICAgIH0pKTsKICAgIH0KICAgIC8qKgogICAgICogUmV0dXJuIHBhc3N3b3JkIGhhc2ggdGhhdCBjYW4gYmUgY29tcGFyZWQKICAgICAqIEBwYXJhbSBwYXNzd29yZCB0byBiZSBoYXNoZWQKICAgICAqIEByZXR1cm4gdGhlIHBhc3N3b3JkIGhhc2gKICAgICAqLwoKICB9XSwgW3sKICAgIGtleTogImdldFBhc3N3b3JkSGFzaCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0UGFzc3dvcmRIYXNoKHBhc3N3b3JkKSB7CiAgICAgIHZhciBoYXNoZXIgPSBTSEEzSGFzaGVyLmNyZWF0ZUhhc2hlcig2NCk7CiAgICAgIGhhc2hlci5yZXNldCgpOwogICAgICBoYXNoZXIudXBkYXRlKENvbnZlcnQudXRmOFRvSGV4KHBhc3N3b3JkLnZhbHVlKSk7CiAgICAgIHZhciBoYXNoID0gbmV3IFVpbnQ4QXJyYXkoNjQpOwogICAgICBoYXNoZXIuZmluYWxpemUoaGFzaCk7CiAgICAgIHJldHVybiBDb252ZXJ0LnVpbnQ4VG9IZXgoaGFzaCk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gUHJvZmlsZVNlcnZpY2U7Cn0oKTs="},{"version":3,"sources":["/home/hero/temp/gcr-wallet/src/services/ProfileService.ts"],"names":[],"mappings":";;;;;;AAAA;;;;;;;;;;;;;;AAcG;AACH,SAAS,OAAT,EAA4B,UAA5B,QAA8C,YAA9C;AAGA,SAAS,mBAAT,QAAoC,6CAApC;AAEA;;AAEG;;AACH,WAAa,cAAb;AAAA,4BAAA;AAAA;;AACI;;;AAGG;AACc,SAAA,eAAA,GAAkB,mBAAmB,CAAC,QAAtC;AAuDpB;;AA5DD;AAAA;AAAA,WAOW,uBAAW;AACd,aAAO,MAAM,CAAC,MAAP,CAAc,KAAK,wBAAL,EAAd,CAAP;AACH;AATL;AAAA;AAAA,WAWW,0BAAiB,WAAjB,EAAoC;AACvC,aAAO,KAAK,wBAAL,GAAgC,WAAhC,CAAP;AACH;AAbL;AAAA;AAAA,WAeW,oCAAwB;AAC3B,aAAO,KAAK,eAAL,CAAqB,GAArB,MAA8B,EAArC;AACH;AAjBL;AAAA;AAAA,WAmBW,qBAAY,OAAZ,EAAiC;AACpC,UAAM,QAAQ,GAAG,KAAK,wBAAL,EAAjB;AACA,MAAA,QAAQ,CAAC,OAAO,CAAC,WAAT,CAAR,GAAgC,OAAhC;AACA,WAAK,eAAL,CAAqB,GAArB,CAAyB,QAAzB;AACA,aAAO,OAAP;AACH;AAxBL;AAAA;AAAA,WA0BW,uBAAc,WAAd,EAAiC;AACpC,UAAM,QAAQ,GAAG,KAAK,wBAAL,EAAjB;AACA,aAAO,QAAQ,CAAC,WAAD,CAAf;AACA,WAAK,eAAL,CAAqB,GAArB,CAAyB,QAAzB;AACH;AA9BL;AAAA;AAAA,WAgCW,oBAAW,OAAX,EAAkC,IAAlC,EAA8C;AACjD,aAAO,KAAK,WAAL,CAAiB,MAAM,CAAC,MAAP,CAAc,OAAd,EAAuB;AAAE,QAAA,IAAI,EAAJ;AAAF,OAAvB,CAAjB,CAAP;AACH;AAlCL;AAAA;AAAA,WAoCW,wBAAe,OAAf,EAAsC,QAAtC,EAAwD,IAAxD,EAAsE,IAAtE,EAAkF;AACrF,aAAO,KAAK,WAAL,CAAiB,MAAM,CAAC,MAAP,CAAc,OAAd,EAAuB;AAAE,QAAA,QAAQ,EAAR,QAAF;AAAY,QAAA,IAAI,EAAJ,IAAZ;AAAkB,QAAA,IAAI,EAAJ;AAAlB,OAAvB,CAAjB,CAAP;AACH;AAtCL;AAAA;AAAA,WAwCW,wBAAe,OAAf,EAAsC,QAAtC,EAAwD;AAC3D,aAAO,KAAK,WAAL,CAAiB,MAAM,CAAC,MAAP,CAAc,OAAd,EAAuB;AAAE,QAAA,QAAQ,EAAR;AAAF,OAAvB,CAAjB,CAAP;AACH;AA1CL;AAAA;AAAA,WA2CW,+CAAsC,OAAtC,EAA6D,0BAA7D,EAAgG;AACnG,aAAO,KAAK,WAAL,CAAiB,MAAM,CAAC,MAAP,CAAc,OAAd,EAAuB;AAAE,QAAA,0BAA0B,EAA1B;AAAF,OAAvB,CAAjB,CAAP;AACH;AACD;;;;AAIG;;AAlDP;AAAA;AAAA,WAmDW,yBAAuB,QAAvB,EAAyC;AAC5C,UAAM,MAAM,GAAG,UAAU,CAAC,YAAX,CAAwB,EAAxB,CAAf;AACA,MAAA,MAAM,CAAC,KAAP;AACA,MAAA,MAAM,CAAC,MAAP,CAAc,OAAO,CAAC,SAAR,CAAkB,QAAQ,CAAC,KAA3B,CAAd;AAEA,UAAM,IAAI,GAAG,IAAI,UAAJ,CAAe,EAAf,CAAb;AACA,MAAA,MAAM,CAAC,QAAP,CAAgB,IAAhB;AACA,aAAO,OAAO,CAAC,UAAR,CAAmB,IAAnB,CAAP;AACH;AA3DL;;AAAA;AAAA","sourcesContent":["/*\n * Copyright 2020 NEM (https://nem.io)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { Convert, Password, SHA3Hasher } from 'symbol-sdk';\n// internal dependencies\nimport { ProfileModel } from '@/core/database/entities/ProfileModel';\nimport { ProfileModelStorage } from '@/core/database/storage/ProfileModelStorage';\n\n/**\n * Service in charge of loading profiles information from the wallet.\n */\nexport class ProfileService {\n    /**\n     * The storage to keep user configuration around mosaics.  For example, the balance hidden\n     * feature.\n     */\n    private readonly profilesStorage = ProfileModelStorage.INSTANCE;\n\n    public getProfiles(): ProfileModel[] {\n        return Object.values(this.getProfilesByProfileName());\n    }\n\n    public getProfileByName(profileName: string): ProfileModel | undefined {\n        return this.getProfilesByProfileName()[profileName];\n    }\n\n    public getProfilesByProfileName(): Record<string, ProfileModel> {\n        return this.profilesStorage.get() || {};\n    }\n\n    public saveProfile(profile: ProfileModel): ProfileModel {\n        const profiles = this.getProfilesByProfileName();\n        profiles[profile.profileName] = profile;\n        this.profilesStorage.set(profiles);\n        return profile;\n    }\n\n    public deleteProfile(profileName: string) {\n        const profiles = this.getProfilesByProfileName();\n        delete profiles[profileName];\n        this.profilesStorage.set(profiles);\n    }\n\n    public updateSeed(profile: ProfileModel, seed: string): ProfileModel {\n        return this.saveProfile(Object.assign(profile, { seed }));\n    }\n\n    public updatePassword(profile: ProfileModel, password: string, hint: string, seed: string): ProfileModel {\n        return this.saveProfile(Object.assign(profile, { password, hint, seed }));\n    }\n\n    public updateAccounts(profile: ProfileModel, accounts: string[]): ProfileModel {\n        return this.saveProfile(Object.assign(profile, { accounts }));\n    }\n    public updateProfileTermsAndConditionsStatus(profile: ProfileModel, termsAndConditionsApproved: boolean): ProfileModel {\n        return this.saveProfile(Object.assign(profile, { termsAndConditionsApproved }));\n    }\n    /**\n     * Return password hash that can be compared\n     * @param password to be hashed\n     * @return the password hash\n     */\n    public static getPasswordHash(password: Password): string {\n        const hasher = SHA3Hasher.createHasher(64);\n        hasher.reset();\n        hasher.update(Convert.utf8ToHex(password.value));\n\n        const hash = new Uint8Array(64);\n        hasher.finalize(hash);\n        return Convert.uint8ToHex(hash);\n    }\n}\n"],"sourceRoot":""}]}