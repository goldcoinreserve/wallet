import { MosaicId } from '../mosaic';
import { UInt64 } from '../UInt64';
import { MosaicGlobalRestrictionItem } from './MosaicGlobalRestrictionItem';
import { MosaicRestrictionEntryType } from './MosaicRestrictionEntryType';
/**
 * Mosaic global restriction structure describes restriction information for an mosaic.
 */
export declare class MosaicGlobalRestriction {
    /**
     * Version
     */
    readonly version: number;
    /**
     * composite hash
     */
    readonly compositeHash: string;
    /**
     * Mosaic restriction entry type.
     */
    readonly entryType: MosaicRestrictionEntryType;
    /**
     * Mosaic identifier.
     */
    readonly mosaicId: MosaicId;
    /**
     * Mosaic restriction items
     */
    readonly restrictions: MosaicGlobalRestrictionItem[];
    /**
     * Constructor
     * @param version
     * @param compositeHash
     * @param entryType
     * @param mosaicId
     * @param restrictions
     */
    constructor(
    /**
     * Version
     */
    version: number, 
    /**
     * composite hash
     */
    compositeHash: string, 
    /**
     * Mosaic restriction entry type.
     */
    entryType: MosaicRestrictionEntryType, 
    /**
     * Mosaic identifier.
     */
    mosaicId: MosaicId, 
    /**
     * Mosaic restriction items
     */
    restrictions: MosaicGlobalRestrictionItem[]);
    /**
     * Returns the restriction for a given key.
     *
     * @param key the key.
     */
    getRestriction(key: UInt64): MosaicGlobalRestrictionItem | undefined;
    /**
     * Generate buffer
     * @return {Uint8Array}
     */
    serialize(): Uint8Array;
}
